{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mobile Developer Onboarding Checklist (Flutter + Firebase) Welcome to the team! Here's your onboarding checklist to get up to speed with our mobile development workflow using Flutter and Firebase. 1. Environment Setup [ ] Install Flutter SDK and add it to your system PATH [ ] (Optional) Install Dart SDK separately if needed [ ] Set up Android Studio or VS Code with Flutter and Dart plugins [ ] Configure Android/iOS emulator or physical device [ ] Clone the main project repository and run flutter pub get [ ] Run the project on your emulator or device to verify setup 2. Firebase Setup [ ] Create or request access to the Firebase Console [ ] Download google-services.json (for Android) and/or GoogleService-Info.plist (for iOS) [ ] Place the files in their correct platform directories [ ] Install Firebase CLI : npm install -g firebase-tools [ ] Authenticate with Firebase CLI: firebase login [ ] Initialize or link the Firebase project: firebase init (if needed) [ ] Ensure setup for: [ ] Authentication [ ] Firestore Database [ ] Firebase Storage 3. Project Knowledge [ ] Read the project's README.md and any contributing guides [ ] Understand the folder structure and architecture [ ] Explore the main modules/screens and navigation system [ ] Review how authentication works (user flow) [ ] Learn our state management approach (e.g., Provider, Riverpod, BLoC) [ ] Get familiar with any external packages/libraries [ ] Review Firebase integration for each service 4. Development Standards [ ] Read and follow our code style and naming conventions [ ] Follow our Git branching strategy (e.g., feature/, bugfix/) [ ] Use our commit style (e.g., Conventional Commits) [ ] Understand the pull request review process [ ] Learn how to write and run Flutter tests 5. Tools and Accounts [ ] Join our GitHub/GitLab repository [ ] Request access to: [ ] Firebase Console [ ] Communication tool (Slack/Discord/Teams) [ ] Project management tool (Jira, Trello, etc.) [ ] CI/CD pipeline tool (e.g., GitHub Actions, Codemagic) [ ] Set up code formatter: flutter format . [ ] Install Flutter Lints 6. Initial Tasks [ ] Complete a small starter task or fix a simple bug [ ] Push your changes and create a Pull Request [ ] Go through the code review process [ ] Run and pass all project tests [ ] Deploy to staging (if applicable) 7. Optional (Recommended) [ ] Write a short internal doc explaining a feature or module you learned [ ] Contribute to improving documentation or README [ ] Attend team syncs or watch the recordings of past ones Happy coding and welcome aboard!","title":"Mobile Developer Onboarding Checklist (Flutter + Firebase)"},{"location":"#mobile-developer-onboarding-checklist-flutter-firebase","text":"Welcome to the team! Here's your onboarding checklist to get up to speed with our mobile development workflow using Flutter and Firebase.","title":"Mobile Developer Onboarding Checklist (Flutter + Firebase)"},{"location":"#1-environment-setup","text":"[ ] Install Flutter SDK and add it to your system PATH [ ] (Optional) Install Dart SDK separately if needed [ ] Set up Android Studio or VS Code with Flutter and Dart plugins [ ] Configure Android/iOS emulator or physical device [ ] Clone the main project repository and run flutter pub get [ ] Run the project on your emulator or device to verify setup","title":"1. Environment Setup"},{"location":"#2-firebase-setup","text":"[ ] Create or request access to the Firebase Console [ ] Download google-services.json (for Android) and/or GoogleService-Info.plist (for iOS) [ ] Place the files in their correct platform directories [ ] Install Firebase CLI : npm install -g firebase-tools [ ] Authenticate with Firebase CLI: firebase login [ ] Initialize or link the Firebase project: firebase init (if needed) [ ] Ensure setup for: [ ] Authentication [ ] Firestore Database [ ] Firebase Storage","title":"2. Firebase Setup"},{"location":"#3-project-knowledge","text":"[ ] Read the project's README.md and any contributing guides [ ] Understand the folder structure and architecture [ ] Explore the main modules/screens and navigation system [ ] Review how authentication works (user flow) [ ] Learn our state management approach (e.g., Provider, Riverpod, BLoC) [ ] Get familiar with any external packages/libraries [ ] Review Firebase integration for each service","title":"3. Project Knowledge"},{"location":"#4-development-standards","text":"[ ] Read and follow our code style and naming conventions [ ] Follow our Git branching strategy (e.g., feature/, bugfix/) [ ] Use our commit style (e.g., Conventional Commits) [ ] Understand the pull request review process [ ] Learn how to write and run Flutter tests","title":"4. Development Standards"},{"location":"#5-tools-and-accounts","text":"[ ] Join our GitHub/GitLab repository [ ] Request access to: [ ] Firebase Console [ ] Communication tool (Slack/Discord/Teams) [ ] Project management tool (Jira, Trello, etc.) [ ] CI/CD pipeline tool (e.g., GitHub Actions, Codemagic) [ ] Set up code formatter: flutter format . [ ] Install Flutter Lints","title":"5. Tools and Accounts"},{"location":"#6-initial-tasks","text":"[ ] Complete a small starter task or fix a simple bug [ ] Push your changes and create a Pull Request [ ] Go through the code review process [ ] Run and pass all project tests [ ] Deploy to staging (if applicable)","title":"6. Initial Tasks"},{"location":"#7-optional-recommended","text":"[ ] Write a short internal doc explaining a feature or module you learned [ ] Contribute to improving documentation or README [ ] Attend team syncs or watch the recordings of past ones Happy coding and welcome aboard!","title":"7. Optional (Recommended)"}]}